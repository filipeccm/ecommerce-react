{"ast":null,"code":"var _jsxFileName = \"/Users/Filipe/ecommerce-course/src/pages/shop/Shop.js\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport Collection from '../collection/Collection';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nconst Shop = ({\n  match,\n  updateCollections\n}) => {\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections');\n    console.log('HELLO CARALHO');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: Collection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/Filipe/ecommerce-course/src/pages/shop/Shop.js"],"names":["React","useEffect","Route","connect","CollectionsOverview","Collection","updateCollections","firestore","convertCollectionsSnapshotToMap","Shop","match","collectionRef","collection","console","log","get","then","snapshot","collectionsMap","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;;AAKA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASJ,EAAAA;AAAT,CAAD,KAAkC;AAC7CL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEAH,IAAAA,aAAa,CAACI,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAX,MAAAA,iBAAiB,CAACY,cAAD,CAAjB;AACD,KAHD;AAID,GARQ,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAER,KAAK,CAACS,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEf,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEM,KAAK,CAACS,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEd,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAhBD;;AAkBA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxCf,EAAAA,iBAAiB,EAAGY,cAAD,IACjBG,QAAQ,CAACf,iBAAiB,CAACY,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAef,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCX,IAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport Collection from '../collection/Collection';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nconst Shop = ({ match, updateCollections }) => {\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections');\n    console.log('HELLO CARALHO');\n\n    collectionRef.get().then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  });\n  return (\n    <div className=\"shop-page\">\n      <Route exact path={`${match.path}`} component={CollectionsOverview} />\n      <Route path={`${match.path}/:collectionId`} component={Collection} />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}